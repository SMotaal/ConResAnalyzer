
function [tfer1D_fixed,tfer1D_adap,rads] = disp_err(err_fixed,err_adap,N)

%DISP_ERR Performance Analysis of Adaptive Schemes vs Fixed ones
% [RES_FIXED, RES_ADAP, RADS] = DISP_ERR(ERR_FIXED,ERR_ADAP,IMSIZE)
% takes in the error images generated by fixed and adaptive halftoning schemes
% and plots 20 log|error| as a function of radial frequency for the 
% fixed and adaptive methods. 

% Authored 2001, Niranjan Damera-Venkata, modified July 2002 by Vishal Monga

% Part of Halftoning Toolbox Version 1.2 released July 2005

% Copyright (c) 1999-2005 The University of Texas
% All Rights Reserved.

[x,y] = meshgrid(-((N/2)-1):N/2);
z=(x+i*y)/(N/2); r=abs(z); ang=angle(z);
maxrsin=abs(1./sin(ang+.000000001)); maxrcos=abs(1./cos(ang+.000000001));
maxr=min(maxrsin,maxrcos);
win=(1+cos(r./maxr*pi))/2;
clear maxrsin maxrcos maxr z ang

tfer_fixed=fftshift(abs(fft2(err_fixed.*win)));
points=20;
tfer1D_fixed=zeros(1,points);
hirad=linspace(0.01,sqrt(2),points);
lorad=[0 hirad(1:points-1)];
for t=1:points
  mask=find(r>=lorad(t)&r<hirad(t));
  tfer1D_fixed(t)=mean(tfer_fixed(mask));
end
rads=(hirad+lorad)/2;
figure;
plot(rads,20*log10(tfer1D_fixed));
%plot(rads,(tfer1D_fixed));


tfer_adap=fftshift(abs(fft2(err_adap.*win)));
points=20;
tfer1D_adap=zeros(1,points);
hirad=linspace(0.01,sqrt(2),points);
lorad=[0 hirad(1:points-1)];
for t=1:points
  mask=find(r>=lorad(t)&r<hirad(t));
  tfer1D_adap(t)=mean(tfer_adap(mask));
end

rads=(hirad+lorad)/2;
hold on;
plot(rads,20*log10(tfer1D_adap),'--');
%plot(rads,(tfer1D_adap));


set(gca,'fontsize',16);
%legend('L = L_{opt}','L adaptive');
legend('non-adaptive','adaptive');
xlabel('normalized radial frequency f_{r}','fontsize',16);
ylabel('20log(|error|)'); 


